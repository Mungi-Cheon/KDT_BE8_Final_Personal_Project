services:
  db:
    image: mysql:8.0.36
    command:
      - --lower_case_table_names=1
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    container_name: mysql
    environment:
      - MYSQL_DATABASE= ${DB_USERNAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}
    volumes: #데이터 저장
      - mysql-data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - ${REDIS_PORT}
    volumes:
      - redis-data:/data

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - ${ZOOKEEPER_PORT}
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - ${KAFKA_PORT}
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST}
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_CONNECT_URL} # kafka가 zookeeper에 커넥션하기 위한 대상을 지정
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  app-data:
  mysql-data:
  redis-data:
